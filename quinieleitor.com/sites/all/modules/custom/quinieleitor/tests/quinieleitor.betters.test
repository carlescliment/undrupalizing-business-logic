<?php

class QuinieleitorBetterTest extends DrupalWebTestCase {

  private $better;

  function getInfo() {
    return array(
      'name' => 'Quinieleitor betters',
      'description' => 'Functional tests for betters',
      'group' => 'Quinieleitor'
    );
  }


  function setUp() {
    parent::setUp('quinieleitor');
    $this->better = $this->drupalCreateUser(array('access content', 'bet'));
  }


  function testNonAdminsCannotCreateABettingSlip() {
    // Arrange
    $this->drupalLogin($this->better);

    // Act
    $this->drupalGet('admin/quinieleitor/add');

    // Assert
    $this->assertResponse(403, 'Non admins cannot create a betting slip.');
  }


  function testBettersBetForCurrentBettingSlip() {
    // Arrange
    $current_slip = $this->createBettingSlipForDate(date('Y-m-d', strtotime('+1 day')));
    $bet = array();
    foreach ($current_slip->matches as $match) {
      $bet["matches[{$match->id}]"] = '1';
    }
    $this->drupalLogin($this->better);

    // Act
    $this->drupalPost('bet', $bet, 'Bet');

    // Assert
    $player_slip = quinieleitor_load_better_slip($this->better->uid, $current_slip->id);
    $this->assertEqual(MATCHES_PER_SLIP, count($player_slip->matches));
    foreach ($player_slip->matches as $match) {
      $this->assertEqual(1, $match->prediction);
    }
  }


  function testBettersDoNotGetAnErrorIfThereIsNoCurrentBettingSlip() {
    // Arrange
    $this->drupalLogin($this->better);

    // Act
    $this->drupalGet('bet');

    // Assert
    $this->assertText('No betting slips have been created yet');
  }


  private function createBettingSlipForDate($date_str) {
    $slip = new stdClass();
    $slip->date = $date_str;
    $slip->matches = array();
    for ($i=0; $i<MATCHES_PER_SLIP; $i++) {
      $local = $i*2;
      $visitor = ($i*2)+1;
      $match = new stdClass();
      $match->name = "TM$local-TM$visitor";
      $slip->matches[$i] = $match;
    }
    quinieleitor_save_betting_slip($slip);

    return $slip;

  }
}
