<?php

define('MATCHES_PER_SLIP', 10);

use carlescliment\Quinieleitor\BetterSlip,
    carlescliment\Quinieleitor\ResultsSlip,
    carlescliment\Quinieleitor\BetterSlips,
    carlescliment\Quinieleitor\PrizeCalculator,
    carlescliment\Quinieleitor\Match,
    carlescliment\Quinieleitor\Bet;
use carlescliment\Quinieleitor\Repository\ResultsSlipRepository,
    carlescliment\Quinieleitor\Repository\BetterSlipRepository;

/**
 * Implements hook_menu()
 */
function quinieleitor_menu() {
  $items = array();
  $items['admin/quinieleitor/add'] = array(
    'title' => 'Add a betting slip',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quinieleitor_add_betting_slip_form'),
    'access arguments' => array('add betting slips'),
    'file' => 'quinieleitor.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/quinieleitor/resolve'] = array(
    'title' => 'Resolve a betting slip',
    'page callback' => 'quinieleitor_resolve_betting_slip_page',
    'access arguments' => array('resolve betting slips'),
    'file' => 'quinieleitor.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['bet'] = array(
    'title' => 'Bet',
    'page callback' => 'quinieleitor_bet_page',
    'access arguments' => array('bet'),
    'file' => 'quinieleitor.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['hall-of-fame'] = array(
    'title' => 'Hall of Fame',
    'page callback' => 'quinieleitor_hall_of_fame_page',
    'access arguments' => array('bet'),
    'file' => 'quinieleitor.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Implements hook_perm()
 */
function quinieleitor_perm() {
  return array('add betting slips', 'resolve betting slips', 'bet');
}


function quinieleitor_load_current_slip() {
  return quinieleitor_get_results_slip_repository()->loadCurrent();
}


function quinieleitor_load_slip($slip_id) {
  return quinieleitor_get_results_slip_repository()->load($slip_id);
}


function quinieleitor_load_betting_slips() {
  return quinieleitor_get_results_slip_repository()->loadAll();
}


function quinieleitor_get_results_slip_repository() {
  global $container;

  return new ResultsSlipRepository($container['database.connection']);
}


function quinieleitor_save_betting_slip(ResultsSlip $results_slip) {
  $results_slip->save(quinieleitor_get_results_slip_repository());
}


function quinieleitor_resolve_betting_slip($slip_id, $matches) {
  $slip = quinieleitor_load_slip($slip_id);
  foreach ($matches as $match_id => $result) {
    $slip->resolve($match_id, $result);
  }
  $slip->close();
  $slip->save(quinieleitor_get_results_slip_repository());

  module_invoke_all('betting_slip_resolved', $slip_id);
}


function quinieleitor_load_better_slip($uid, $slip_id) {
  global $container;
  $repository = new BetterSlipRepository($container['database.connection']);

  return $repository->load($uid, $slip_id);
}


function quinieleitor_save_bet($bet) {
  foreach ($bet->matches as $match_bet) {
    drupal_write_record('bets', $match_bet);
  }
}


/**
 * Specification of betting_slip_resolved.
 */
function hook_betting_slip_resolved($slip_id)
{
}


/**
 * Implements hook_betting_slip_resolved.
 */
function quinieleitor_betting_slip_resolved($slip_id) {
  $better_slips = quinieleitor_load_all_bets_for_slip($slip_id);

  quinieleitor_update_all_better_points($slip_id, $better_slips);
}


function quinieleitor_load_all_bets_for_slip($slip_id) {
  $better_slips = new BetterSlips();
  $results = db_query('SELECT DISTINCT(b.user_id) FROM {bets} b JOIN {matches} m WHERE b.match_id = m.id AND m.slip_id = %d', $slip_id);
  while ($row = db_fetch_object($results)) {
    $better_slips->add(quinieleitor_load_better_slip($row->user_id, $slip_id));
  }

  return $better_slips;
}


function quinieleitor_update_all_better_points($slip_id, $better_slips) {
  $results_slip = quinieleitor_load_slip($slip_id);
  $calculator = new PrizeCalculator(quinieleitor_get_prize_table());
  $better_slips->calculatePrizes($results_slip, $calculator);
  foreach ($better_slips->all() as $better_slip) {
    quinieleitor_add_better_points($better_slip->getUserId(), $better_slip->getPrize());
  }
}


function quinieleitor_get_prize_table() {
  return array(
    'slip_value' => 100,
    'prizes' => array(
      10 => 0.4,
       9 => 0.2,
       8 => 0.12,
       7 => 0.08,
     ),
  );
}


function quinieleitor_add_better_points($uid, $points) {
  $current_points = quinieleitor_load_better_points($points);
  $score = new stdClass();
  $score->user_id = $uid;
  $score->points = $points + $current_points;
  drupal_write_record('better_points', $score);
}


function quinieleitor_load_better_points($uid) {
  $results = db_query('SELECT points FROM {better_points} WHERE user_id=%d', $uid);
  $row = db_fetch_object($results);

  return $row ? $row->points : 0;
}


function quinieleitor_load_hall_of_fame() {
  $results = db_query('SELECT * FROM {better_points} p JOIN {users} u ON p.user_id=u.uid ORDER BY points DESC');
  $hall_of_fame = array();
  while ($row = db_fetch_object($results)) {
    $hall_of_fame[] = $row;
  }

  return $hall_of_fame;
}
