<?php

define('MATCHES_PER_SLIP', 10);
define('HALL_OF_FAME_MEMBERS', 50);

use carlescliment\Quinieleitor\BetterSlip,
    carlescliment\Quinieleitor\ResultsSlip;
use carlescliment\Quinieleitor\Repository\ResultsSlipRepository,
    carlescliment\Quinieleitor\Repository\BetterSlipRepository,
    carlescliment\Quinieleitor\Repository\ScoreRepository;
use carlescliment\Quinieleitor\Controller\ApplicationController;
use carlescliment\Quinieleitor\Score\Updater,
    carlescliment\Quinieleitor\Score\PrizeCalculator;

/**
 * Implements hook_menu()
 */
function quinieleitor_menu() {
  $items = array();
  $items['admin/quinieleitor/add'] = array(
    'title' => 'Add a betting slip',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quinieleitor_add_betting_slip_form'),
    'access arguments' => array('add betting slips'),
    'file' => 'quinieleitor.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/quinieleitor/resolve'] = array(
    'title' => 'Resolve a betting slip',
    'page callback' => 'quinieleitor_resolve_betting_slip_page',
    'access arguments' => array('resolve betting slips'),
    'file' => 'quinieleitor.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['bet'] = array(
    'title' => 'Bet',
    'page callback' => 'quinieleitor_bet_page',
    'access arguments' => array('bet'),
    'file' => 'quinieleitor.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['hall-of-fame'] = array(
    'title' => 'Hall of Fame',
    'page callback' => 'quinieleitor_hall_of_fame_page',
    'access arguments' => array('bet'),
    'file' => 'quinieleitor.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Implements hook_perm()
 */
function quinieleitor_perm() {
  return array('add betting slips', 'resolve betting slips', 'bet');
}


function quinieleitor_get_results_slip_repository() {
  global $container;

  return new ResultsSlipRepository($container['database.connection']);
}


function quinieleitor_get_better_slip_repository() {
  global $container;

  return new BetterSlipRepository($container['database.connection']);
}


/**
 * Specification of betting_slip_resolved.
 */
function hook_betting_slip_resolved(ResultsSlip $slip)
{
}


/**
 * Implements hook_betting_slip_resolved.
 */
function quinieleitor_betting_slip_resolved(ResultsSlip $slip) {
  global $container;
  $better_slips = quinieleitor_get_better_slip_repository()->loadAllByResultsSlip($slip);
  $calculator = new PrizeCalculator($container['quinieleitor.prizes']);;
  $updater = new Updater(quinieleitor_get_score_repository(), $calculator);
  $updater->update($slip, $better_slips);
}


function quinieleitor_get_score_repository() {
  global $container;

  return new ScoreRepository($container['database.connection']);
}


function quinieleitor_controller() {
  global $container;
  
  return new ApplicationController($container);
}
