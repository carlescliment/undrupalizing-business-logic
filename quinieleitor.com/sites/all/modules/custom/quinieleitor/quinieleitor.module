<?php

define('MATCHES_PER_SLIP', 10);
define('HALL_OF_FAME_MEMBERS', 50);

use carlescliment\Quinieleitor\BetterSlip,
    carlescliment\Quinieleitor\ResultsSlip,
    carlescliment\Quinieleitor\PrizeCalculator,
    carlescliment\Quinieleitor\Score;
use carlescliment\Quinieleitor\Repository\ResultsSlipRepository,
    carlescliment\Quinieleitor\Repository\BetterSlipRepository,
    carlescliment\Quinieleitor\Repository\ScoreRepository;
use carlescliment\Quinieleitor\Controller\ApplicationController;

/**
 * Implements hook_menu()
 */
function quinieleitor_menu() {
  $items = array();
  $items['admin/quinieleitor/add'] = array(
    'title' => 'Add a betting slip',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('quinieleitor_add_betting_slip_form'),
    'access arguments' => array('add betting slips'),
    'file' => 'quinieleitor.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/quinieleitor/resolve'] = array(
    'title' => 'Resolve a betting slip',
    'page callback' => 'quinieleitor_resolve_betting_slip_page',
    'access arguments' => array('resolve betting slips'),
    'file' => 'quinieleitor.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['bet'] = array(
    'title' => 'Bet',
    'page callback' => 'quinieleitor_bet_page',
    'access arguments' => array('bet'),
    'file' => 'quinieleitor.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['hall-of-fame'] = array(
    'title' => 'Hall of Fame',
    'page callback' => 'quinieleitor_hall_of_fame_page',
    'access arguments' => array('bet'),
    'file' => 'quinieleitor.pages.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Implements hook_perm()
 */
function quinieleitor_perm() {
  return array('add betting slips', 'resolve betting slips', 'bet');
}


function quinieleitor_load_current_slip() {
  return quinieleitor_get_results_slip_repository()->loadCurrent();
}


function quinieleitor_load_slip($slip_id) {
  return quinieleitor_get_results_slip_repository()->load($slip_id);
}


function quinieleitor_load_betting_slips() {
  return quinieleitor_get_results_slip_repository()->loadAll();
}


function quinieleitor_save_betting_slip(ResultsSlip $results_slip) {
  $results_slip->save(quinieleitor_get_results_slip_repository());
}


function quinieleitor_get_results_slip_repository() {
  global $container;

  return new ResultsSlipRepository($container['database.connection']);
}


function quinieleitor_load_better_slip($uid, $slip_id) {
  return quinieleitor_get_better_slip_repository()->load($uid, $slip_id);
}


function quinieleitor_save_better_slip(BetterSlip $slip) {
  $slip->save(quinieleitor_get_better_slip_repository());
}


function quinieleitor_get_better_slip_repository() {
  global $container;

  return new BetterSlipRepository($container['database.connection']);
}


/**
 * Specification of betting_slip_resolved.
 */
function hook_betting_slip_resolved(ResultsSlip $slip)
{
}


/**
 * Implements hook_betting_slip_resolved.
 */
function quinieleitor_betting_slip_resolved(ResultsSlip $slip) {
  $better_slips = quinieleitor_get_better_slip_repository()->loadAllByResultsSlip($slip);

  quinieleitor_update_all_better_points($slip, $better_slips);
}


function quinieleitor_update_all_better_points(ResultsSlip $results_slip, $better_slips) {
  $calculator = new PrizeCalculator(quinieleitor_get_prize_table());
  $better_slips->calculatePrizes($results_slip, $calculator);
  foreach ($better_slips->all() as $better_slip) {
    quinieleitor_add_better_points($better_slip->getUserId(), $better_slip->getPrize());
  }
}


function quinieleitor_get_score_repository() {
  global $container;

  return new ScoreRepository($container['database.connection']);
}


function quinieleitor_get_prize_table() {
  return array(
    'slip_value' => 100,
    'prizes' => array(
      10 => 0.4,
       9 => 0.2,
       8 => 0.12,
       7 => 0.08,
     ),
  );
}


function quinieleitor_add_better_points($uid, $points) {
  $repository = quinieleitor_get_score_repository();
  $score = new Score($uid, $points);
  $score->sum($repository->loadByUser($uid))->save($repository);
}


function quinieleitor_controller() {
  global $container;
  
  return new ApplicationController($container);
}
